name: Pull Request
on:
  pull_request:
    branches:
      - master

env:
  RESOLVE_REGISTRY: https://repo.orl.eng.hitachivantara.com/artifactory/api/npm/npm/
  APPLICATION_PUBLISH_REPO: ${{ github.repository_owner }}/${{ github.repository_owner }}.github.io
  APPLICATION_PUBLISH_BRANCH: master
  APPLICATION_PUBLISH_FOLDER: app/pr-${{ github.event.number }}
  APPLICATION_PUBLISH_MESSAGE: "docs: application for PR ${{ github.repository }}#${{ github.event.number }}"
  APPLICATION_URL: https://${{ github.repository_owner }}.github.io/app/pr-${{ github.event.number }}/
  PR_URL: "Adoption Application published: https://github.com/${{ github.repository }}/pull/${{ github.event.number }}"

jobs:
  Build-Application:
    name: Build Application
    runs-on: [self-hosted, Linux]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Generate Application
        run: |
          npm run build

      - name: Archive Application
        uses: actions/upload-artifact@v1
        with:
          name: application
          path: ${{ github.workspace }}/build

      - name: Clean Folders
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/build

  Robot:
    name: Test Robot
    needs: [Build-Application]
    runs-on: [self-hosted, Linux]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox]
    container:
      image: joaoeg/docker-robot-framework:0.1
      options: --shm-size=6g --cpus 4 -u 2501
      env:
        BROWSER: ${{ matrix.browser }}
        ROBOT_TESTS_DIR: ./robot
        ROBOT_REPORTS_DIR: ./reports
        ROBOT_THREADS: 4
        ROBOT_OPTIONS: "--variable APPLICATION_URL:http://application --variable BROWSER:${{ matrix.browser }}"

    services:
      application:
        image: nginx
        volumes:
          - ${{ github.workspace }}/dist:/usr/share/nginx/html
        options: >-
          --name application

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch application
        uses: actions/download-artifact@v1
        with:
          name: application
          path: ${{ github.workspace }}/dist

      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart application

      - name: Run Robot
        run: ./.github/robot-docker/run-tests-in-virtual-screen-with-rerun.sh

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ${{ matrix.browser }}-reports
          path: ${{ github.workspace }}/reports

      - name: Clean Folders
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/dist
          rm -rf ${{ github.workspace }}/reports

  Robot-Windows:
    name: Test Robot (Windows)
    needs: Build-Application
    runs-on: [self-hosted, Windows]
    timeout-minutes: 200
    strategy:
      fail-fast: false
      matrix:
        browser: [ie]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch application
        uses: actions/download-artifact@v1
        with:
          name: application
          path: ${{ github.workspace }}/dist

      - name: Run SELENIUM Robot
        uses: ./.github/robot
        with:
          application-url: http://localhost:9002
          browser: ${{ matrix.browser }}
          output-dir: ./reports
          processes: 3
          path: ./robot

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ${{ matrix.browser }}-reports
          path: ${{ github.workspace }}/reports

      - name: Clean Folders
        if: always()
        run: |
          Remove-Item -path ${{ github.workspace }}/dist -recurse -force
          Remove-Item -path ${{ github.workspace }}/reports -recurse -force