name: Pull Request
on:
  pull_request:
    branches:
      - master

env:
  APPLICATION_PUBLISH_REPO: ${{ github.repository_owner }}/${{ github.repository_owner }}.github.io
  APPLICATION_PUBLISH_BRANCH: master
  APPLICATION_PUBLISH_FOLDER: app/pr-${{ github.event.number }}
  APPLICATION_PUBLISH_MESSAGE: "docs: application for PR ${{ github.event.number }} of ${{ github.repository }}"
  APPLICATION_URL: https://${{ github.repository_owner }}.github.io/app/pr-${{ github.event.number }}/
  PR_URL: "Adoption Application published: https://github.com/${{ github.repository }}/pull/${{ github.event.number }}"

jobs:
  Test:
    name: Lint, Jest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install
        run: |
          npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

  Build-Application:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install
        run: |
          npm ci

      - name: Generate Application
        run: |
          CI='' npm run build

      - name: Archive Application
        uses: actions/upload-artifact@v2
        with:
          name: application
          path: ${{ github.workspace }}/build

      - name: Clean Folders
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/build

  Github-Deployment:
    name: Github Deployment
    if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
    needs: [Build-Application]
    runs-on: ubuntu-latest

    steps:
      - name: Start Application Deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{env.APPLICATION_PUBLISH_FOLDER}}
          ref: refs/pull/${{ github.event.number }}/head
          desc: ${{env.APPLICATION_PUBLISH_MESSAGE}}

      - name: Checkout Application Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.APPLICATION_PUBLISH_REPO }}
          ref: ${{ env.APPLICATION_PUBLISH_BRANCH }}
          token: ${{ secrets.ORG_GHPAGES_DEPLOY_KEY }}
          path: gh-docs
          fetch-depth: 1

      - name: Remove Previous Application
        run: |
          rm -rf ${{ github.workspace }}/gh-docs/${APPLICATION_PUBLISH_FOLDER}/*

      - name: Fetch Application
        uses: actions/download-artifact@v2
        with:
          name: application
          path: ${{ github.workspace }}/gh-docs/${{env.APPLICATION_PUBLISH_FOLDER}}

      - name: Push Application
        run: |
          cd ${{ github.workspace }}/gh-docs
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A ${APPLICATION_PUBLISH_FOLDER}
          git commit -m "${APPLICATION_PUBLISH_MESSAGE}"
          git push

      - name: Cleanup Folder
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/gh-docs

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{env.APPLICATION_URL}}

  Cleanup:
    name: Cleanup artifacts
    if: always()
    needs: [Github-Deployment]
    runs-on: ubuntu-latest

    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: application

  Notify-End:
    name: Notify End
    if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' && always()
    needs: [Test, Github-Deployment]
    runs-on: ubuntu-latest

    steps:
      - uses: technote-space/workflow-conclusion-action@v1

      - name: generate conclusion color
        id: conclusion_color
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if("${{ env.WORKFLOW_CONCLUSION }}" === "success") core.exportVariable("COLOR", "#63A621")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "failure") core.exportVariable("COLOR", "#C62828")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "neutral") core.exportVariable("COLOR", "#BCBCBC")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "cancelled") core.exportVariable("COLOR", "#FFD00A")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "timed_out") core.exportVariable("COLOR", "#FFD00A")

      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          CONCLUSION: ${{ env.WORKFLOW_CONCLUSION }}
          APPLICATION: ${{ env.APPLICATION_URL }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "${{env.COLOR}}",
                  "title": "${{ github.workflow }} (#${{github.event.number}}): ${{ env.CONCLUSION }}",
                  "title_link": "${{ env.RUN_URL }}",
                  "text": "${{ env.PR_URL }}",
                  "footer": "by ${{github.actor}}",
                  "footer_icon": "https://github.com/${{github.actor}}.png?size=20"
                }
              ]
            }
