name: Pull Request
on:
  pull_request:
    branches:
      - master

env:
  RESOLVE_REGISTRY: https://repo.orl.eng.hitachivantara.com/artifactory/api/npm/npm/
  APPLICATION_PUBLISH_REPO: ${{ github.repository_owner }}/${{ github.repository_owner }}.github.io
  APPLICATION_PUBLISH_BRANCH: master
  APPLICATION_PUBLISH_FOLDER: app/pr-${{ github.event.number }}
  APPLICATION_PUBLISH_MESSAGE: "docs: application for PR ${{ github.repository }}#${{ github.event.number }}"
  APPLICATION_URL: https://${{ github.repository_owner }}.github.io/app/pr-${{ github.event.number }}/
  PR_URL: "Adoption Application published: https://github.com/${{ github.repository }}/pull/${{ github.event.number }}"

jobs:
  Build-Application:
    name: Build Application
    runs-on: [self-hosted, Linux]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Generate Application
        run: |
          npm run build

      - name: Archive Application
        uses: actions/upload-artifact@v1
        with:
          name: application
          path: ${{ github.workspace }}/build

      - name: Clean Folders
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/build

  E2E-Tests-Linux:
    name: E2E-Tests-Linux
    needs: [Build-Application]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [firefox, chrome]
    defaults:
      run:
        working-directory: automation/wdio

    services:
      application:
        image: nginx
        volumes:
          - ${{ github.workspace }}/dist:/usr/share/nginx/html
        options: >-
          --name application
        ports:
          - 80:80

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch App
        uses: actions/download-artifact@v1
        with:
          name: application
          path: ${{ github.workspace }}/dist

      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart application

      - name: Install automation/wdio
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Run automation/wdio
        env:
          BROWSER: ${{ matrix.browser }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        run: npm run wdio -- --baseUrl http://localhost

      - name: Clean Folders
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/dist

  E2E-Tests-Windows:
    name: E2E-Tests-Windows
    needs: [Build-Application]
    runs-on: [self-hosted, Windows, java]
    strategy:
      fail-fast: false
      matrix:
        browser: [ie]
    defaults:
      run:
        working-directory: automation/wdio

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Fetch App
        uses: actions/download-artifact@v1
        with:
          name: application
          path: ${{ github.workspace }}/../../hv-uikit-react/hv-uikit-react/dist

      - name: Install automation/wdio
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Run automation/wdio
        env:
          BROWSER: ${{ matrix.browser }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        run: npm run wdio -- --baseUrl http://localhost:9002

      - name: Clean Folders
        if: always()
        run: |
          Remove-Item -path ${{ github.workspace }}/../../hv-uikit-react/hv-uikit-react/dist -recurse -force

  Notify-End:
    name: Notify End
    needs: [E2E-Tests-Linux, E2E-Tests-Windows]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: technote-space/workflow-conclusion-action@v1

      - name: generate conclusion color
        id: conclusion_color
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if("${{ env.WORKFLOW_CONCLUSION }}" === "success") core.exportVariable("COLOR", "#63A621")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "failure") core.exportVariable("COLOR", "#C62828")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "neutral") core.exportVariable("COLOR", "#BCBCBC")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "cancelled") core.exportVariable("COLOR", "#FFD00A")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "timed_out") core.exportVariable("COLOR", "#FFD00A")

      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          CONCLUSION: ${{ env.WORKFLOW_CONCLUSION }}
          APPLICATION: ${{ env.APPLICATION_URL }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "${{env.COLOR}}",
                  "title": "${{ github.workflow }} (#${{github.event.number}}): ${{ env.CONCLUSION }}",
                  "title_link": "${{ env.RUN_URL }}",
                  "text": "${{ env.PR_URL }}",
                  "footer": "by ${{github.actor}}",
                  "footer_icon": "https://github.com/${{github.actor}}.png?size=20"
                }
              ]
            }
