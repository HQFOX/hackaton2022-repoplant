{"version":3,"file":"static/js/795.bd04d0d1.chunk.js","mappings":"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","sources":["lib/hooks/useRecover.ts","lib/context/RecoverContext.tsx","components/login/Message/styles.tsx","components/login/Message/Message.tsx","components/login/LoginForm/styles.tsx","components/login/LoginForm/LoginForm.tsx","components/login/RecoverForm/styles.tsx","components/login/RecoverForm/RecoverForm.tsx","pages/Login/Login.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst useRecover = (): RecoverContextValue => {\n  const [recoverStatus, setRecoverStatus] = useState<string>(\"idle\");\n  const [activeForm, setActiveForm] = useState<string>(\"login\");\n\n  const recover = async (email: string) => {\n    setRecoverStatus(\"pending\");\n    try {\n      await recover(email);\n      setRecoverStatus(\"success\");\n      setTimeout(() => {\n        setRecoverStatus(\"idle\");\n        setActiveForm(\"login\");\n      }, 2000);\n    } catch (error) {\n      setRecoverStatus(\"error\");\n      setTimeout(() => setRecoverStatus(\"idle\"), 2000);\n    }\n  };\n\n  return { recoverStatus, activeForm, setActiveForm, recover };\n};\n\nexport default useRecover;\n","import React, { useMemo } from \"react\";\n\nimport useRecover from \"lib/hooks/useRecover\";\n\nexport const RecoverContext = React.createContext<RecoverContextValue>({\n  recoverStatus: \"idle\",\n  activeForm: \"login\",\n  setActiveForm: () => {},\n  recover: () => {},\n});\n\nexport const RecoverContextProvider: React.FC = ({ children }) => {\n  const { recoverStatus, activeForm, setActiveForm, recover } = useRecover();\n\n  const value = useMemo(\n    () => ({\n      recoverStatus,\n      activeForm,\n      setActiveForm,\n      recover,\n    }),\n    [recoverStatus, activeForm, setActiveForm, recover]\n  );\n\n  return (\n    <RecoverContext.Provider value={value}>{children}</RecoverContext.Provider>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 52,\n    margin: `${theme.hv.spacing.xs}px 0`,\n    padding: \"5px 0\",\n  },\n  error: {\n    background: theme.hv.palette.semantic.sema9,\n  },\n  success: {\n    background: theme.hv.palette.semantic.sema7,\n  },\n}));\n\nexport default styles;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { HvTypography } from \"@hitachivantara/uikit-react-core\";\n\nimport useStyles from \"./styles\";\n\ninterface Message {\n  error?: string;\n  success?: string;\n}\n\ninterface MessageProps {\n  message: Message;\n  status: string;\n}\n\nconst Message: React.FC<MessageProps> = ({ message, status }: MessageProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, classes[status as \"error\" | \"success\"])}>\n      <HvTypography variant=\"normalText\">{message.error}</HvTypography>\n    </div>\n  );\n};\n\nexport default Message;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n    margin: \"auto\",\n    paddingTop: 150,\n    \"& h3\": {\n      textAlign: \"center\",\n    },\n  },\n  title: {\n    marginBottom: `${theme.hv.spacing.md}px`,\n  },\n  input: {\n    marginTop: 10,\n  },\n  login: {\n    width: 120,\n    float: \"right\",\n    marginTop: `${theme.hv.spacing.lg}px`,\n  },\n  forgot: {\n    display: \"flex\",\n    margin: `${theme.hv.spacing.sm}px auto 0`,\n  },\n  checkBox: {\n    marginTop: `${theme.hv.spacing.lg}px`,\n  },\n  sentenceCase: {\n    textTransform: `full-size-kana`,\n  },\n  checkBoxTypography: {\n    ...theme.hv.typography.normalText,\n  },\n}));\n\nexport default styles;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport clsx from \"clsx\";\nimport {\n  HvButton,\n  HvTypography,\n  HvLabel,\n  HvBaseInput,\n  HvCheckBox,\n} from \"@hitachivantara/uikit-react-core\";\n\nimport Message from \"../Message\";\nimport useStyles from \"./styles\";\n\ninterface LoginFormProps {\n  onSubmit: (credentials: AuthCredentials) => void;\n  onForgot: () => void;\n  status: string;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({\n  onSubmit,\n  onForgot,\n  status,\n}: LoginFormProps) => {\n  const { t } = useTranslation(\"login\");\n  const classes = useStyles();\n\n  const [credentials, setCredentials] = useState<AuthCredentials>({\n    username: \"admin\",\n    password: \"password\",\n  });\n\n  const isPending = status === \"pending\";\n  const isError = status === \"error\";\n\n  const handleChange = (value: string, key: string): void => {\n    const newCredentials: AuthCredentials = {\n      ...credentials,\n      ...{ [key]: value },\n    };\n    setCredentials(newCredentials);\n  };\n\n  return (\n    <div className={classes.root}>\n      <HvTypography variant=\"mTitle\" className={classes.title}>\n        {t(\"loginForm.title\")}\n      </HvTypography>\n\n      {isError && (\n        <Message\n          message={{\n            error: t(\"loginForm.error\"),\n          }}\n          status={status}\n        />\n      )}\n\n      <HvLabel\n        id=\"username-label\"\n        label={t(\"loginForm.username.label\")}\n        classes={{ root: classes.input }}\n      >\n        <HvBaseInput\n          id=\"username-input\"\n          placeholder={t(\"loginForm.username.placeholder\")}\n          value={credentials.username}\n          inputProps={{ autoFocus: true }}\n          onChange={(\n            event: React.ChangeEvent<HTMLInputElement>,\n            value: string\n          ): string => {\n            handleChange(value, \"username\");\n            return value;\n          }}\n        />\n      </HvLabel>\n\n      <HvLabel\n        id=\"password-label\"\n        label={t(\"loginForm.password.label\")}\n        classes={{ root: classes.input }}\n      >\n        <HvBaseInput\n          id=\"password-input\"\n          placeholder={t(\"loginForm.password.placeholder\")}\n          value={credentials.password}\n          inputProps={{\n            type: \"password\",\n          }}\n          onChange={(\n            event: React.ChangeEvent<HTMLInputElement>,\n            value: string\n          ): string => {\n            handleChange(value, \"password\");\n            return value;\n          }}\n        />\n      </HvLabel>\n\n      <HvCheckBox\n        classes={{\n          container: classes.checkBox,\n        }}\n        label={t(\"loginForm.remember\")}\n      />\n\n      <HvButton\n        type=\"submit\"\n        category=\"primary\"\n        className={clsx(classes.login, classes.sentenceCase)}\n        onClick={() => onSubmit(credentials)}\n        disabled={isPending}\n      >\n        {isPending\n          ? t(\"loginForm.submit.logging\")\n          : t(\"loginForm.submit.login\")}\n      </HvButton>\n\n      <HvButton\n        category=\"ghost\"\n        classes={{\n          root: classes.forgot,\n        }}\n        className={clsx(classes.sentenceCase)}\n        onClick={onForgot}\n        disabled={isPending}\n      >\n        {t(\"loginForm.forgot\")}\n      </HvButton>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n    margin: \"auto\",\n    paddingTop: 150,\n    \"& h3, p\": {\n      textAlign: \"center\",\n    },\n  },\n  title: {\n    marginBottom: `${theme.hv.spacing.sm}px`,\n  },\n  subtitle: {\n    margin: `${theme.hv.spacing.sm}px 0`,\n  },\n  recover: {\n    width: 120,\n    float: \"right\",\n    marginTop: `${theme.hv.spacing.lg}px`,\n  },\n  cancel: {\n    width: 120,\n    marginTop: `${theme.hv.spacing.lg}px`,\n  },\n}));\n\nexport default styles;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  HvButton,\n  HvTypography,\n  HvLabel,\n  HvBaseInput,\n} from \"@hitachivantara/uikit-react-core\";\n\nimport Message from \"../Message\";\nimport useStyles from \"./styles\";\n\ninterface RecoverFormProps {\n  onSubmit: (email: string) => void;\n  onCancel: () => void;\n  status: string;\n}\n\nconst RecoverForm: React.FC<RecoverFormProps> = ({\n  onSubmit,\n  onCancel,\n  status,\n}: RecoverFormProps) => {\n  const { t } = useTranslation(\"login\");\n  const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const isPending = status === \"pending\";\n  const isSuccess = status === \"success\";\n  const isError = status === \"error\";\n\n  return (\n    <div className={classes.root}>\n      <HvTypography variant=\"mTitle\">{t(\"recoverForm.title\")}</HvTypography>\n\n      {(isError || isSuccess) && (\n        <Message\n          message={{\n            error: t(\"recoverForm.error\"),\n            success: t(\"recoverForm.success\"),\n          }}\n          status={status}\n        />\n      )}\n\n      <HvTypography variant=\"normalText\">\n        {t(\"recoverForm.subtitle\")}\n      </HvTypography>\n\n      <HvLabel id=\"email-label\" label={t(\"recoverForm.email.label\")}>\n        <HvBaseInput\n          id=\"email-input\"\n          placeholder={t(\"recoverForm.email.placeholder\")}\n          value={email}\n          inputProps={{ autoFocus: true }}\n          onChange={(\n            evt: React.ChangeEvent<HTMLInputElement>,\n            value: string\n          ): string => {\n            setEmail(evt.target.value);\n            return value;\n          }}\n        />\n      </HvLabel>\n\n      <HvButton\n        type=\"submit\"\n        category=\"ghost\"\n        className={classes.cancel}\n        onClick={onCancel}\n      >\n        {t(\"recoverForm.cancel\")}\n      </HvButton>\n\n      <HvButton\n        type=\"submit\"\n        category=\"primary\"\n        className={classes.recover}\n        onClick={() => onSubmit(email)}\n        disabled={isPending}\n      >\n        {isPending\n          ? t(\"recoverForm.submit.recovering\")\n          : t(\"recoverForm.submit.recover\")}\n      </HvButton>\n    </div>\n  );\n};\n\nexport default RecoverForm;\n","import React, { useContext } from \"react\";\nimport { HvLogin, HvFooter } from \"@hitachivantara/uikit-react-core\";\n\nimport {\n  RecoverContext,\n  RecoverContextProvider,\n} from \"lib/context/RecoverContext\";\nimport { AuthContext } from \"lib/context/AuthContext\";\nimport { Container } from \"components/layout\";\nimport { LoginForm, RecoverForm } from \"components/login\";\nimport background from \"assets/background.png\";\n\nconst Login: React.FC = () => {\n  const { login, authStatus } = useContext(AuthContext);\n  const { activeForm, recoverStatus, recover, setActiveForm } =\n    useContext(RecoverContext);\n\n  return (\n    <RecoverContextProvider>\n      <Container fullScreen>\n        <HvLogin background={background}>\n          {activeForm === \"recover\" ? (\n            <RecoverForm\n              status={recoverStatus}\n              onSubmit={async (email) => recover(email)}\n              onCancel={() => setActiveForm(\"login\")}\n            />\n          ) : (\n            <LoginForm\n              status={authStatus}\n              onSubmit={async (credentials) => login(credentials)}\n              onForgot={() => setActiveForm(\"recover\")}\n            />\n          )}\n        </HvLogin>\n      </Container>\n      <HvFooter />\n    </RecoverContextProvider>\n  );\n};\n\nexport default Login;\n"],"names":["useState","recoverStatus","setRecoverStatus","activeForm","setActiveForm","recover","email","setTimeout","RecoverContext","React","RecoverContextProvider","children","useRecover","value","useMemo","Provider","makeStyles","theme","root","display","alignItems","justifyContent","height","margin","hv","spacing","xs","padding","error","background","palette","semantic","sema9","success","sema7","message","status","classes","useStyles","className","clsx","variant","width","paddingTop","textAlign","title","marginBottom","md","input","marginTop","login","float","lg","forgot","sm","checkBox","sentenceCase","textTransform","checkBoxTypography","typography","normalText","onSubmit","onForgot","t","useTranslation","username","password","credentials","setCredentials","isPending","isError","handleChange","key","newCredentials","id","label","placeholder","inputProps","autoFocus","onChange","event","type","container","category","onClick","disabled","subtitle","cancel","onCancel","setEmail","isSuccess","evt","target","useContext","AuthContext","authStatus","fullScreen"],"sourceRoot":""}