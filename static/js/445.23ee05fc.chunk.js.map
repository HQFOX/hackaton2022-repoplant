{"version":3,"file":"static/js/445.23ee05fc.chunk.js","mappings":"uRAGMA,EAAW,8BAEXC,EAAU,SAACC,GAAD,OAAiBC,IAAAA,IAAUD,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIC,S,WCwElE,EAxEuB,WACrB,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACA,EDJ0B,eAACC,EAAD,uDAAQ,GAAR,OAC1BC,EAAAA,EAAAA,IAAO,GAAD,OAAIjB,EAAJ,qBAAyBgB,GAAQf,EAAS,CAAEiB,UAAU,ICG3CC,CAAa,SAAD,OAAUX,EAAO,IAAtCF,EAAR,EAAQA,MAERc,EAAAA,EAAAA,YAAU,WACJd,IACFS,EAAWT,EAAKQ,SAChBD,EAAYP,EAAKQ,QAAQO,QAEX,IAAVX,GACFC,EAASW,KAAKC,KAAKjB,EAAKkB,MAAQ,QAGnC,CAACd,EAAOJ,IAuCX,OACE,SAAC,IAAD,CACEmB,GAAG,OACHnB,KAAMQ,EACNY,QArCoC,CACtC,CACEC,WAAY,OACZC,SAAU,OACVC,SAAU,gBACVC,SAAU,KAEZ,CACEH,WAAY,QACZC,SAAU,QACVC,SAAU,gBACVC,SAAU,KAEZ,CACEH,WAAY,eACZC,SAAU,eACVC,SAAU,gBACVC,SAAU,KAEZ,CACEH,WAAY,iBACZC,SAAU,iBACVC,SAAU,UACVC,SAAU,KAEZ,CACEH,WAAY,OACZC,SAAU,OACVC,SAAU,UACVC,SAAU,MASVC,cAAc,EACdC,UAAU,EACVxB,KAAMA,EACNE,MAAOA,EACPE,SAAUA,EACVqB,sBAAoB,EACpBC,aAhDqB,SAACC,GACxB1B,EAAQ0B,O,WCPZ,EAZ4B,WAC1B,OACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAQC,WAAS,EAAjB,UACE,SAAC,IAAD,CAAQC,MAAI,EAACC,GAAI,GAAjB,UACE,SAAC,EAAD","sources":["lib/api/swapi.ts","components/starships/StarshipsTable/StarshipsTable.tsx","pages/Starships/Starships.tsx"],"sourcesContent":["import useSWR from \"swr\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://swapi.py4e.com/api/\";\n\nconst fetcher = (url: string) => axios.get(url).then((res) => res.data);\n\nexport const useStarships = (path = \"\") =>\n  useSWR(`${BASE_URL}starships/${path}`, fetcher, { suspense: true });\n\nexport const useFilms = (path = \"\") =>\n  useSWR(`${BASE_URL}films/${path}`, fetcher, { suspense: true });\n","import React, { useEffect, useState } from \"react\";\nimport { HvTable, TableColumn } from \"@hitachivantara/uikit-react-core\";\n\nimport { useStarships } from \"lib/api/swapi\";\n\nconst StarshipsTable = () => {\n  const [page, setPage] = useState(0);\n  const [pages, setPages] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n\n  const [results, setResults] = useState([]);\n  const { data } = useStarships(`?page=${page + 1}`);\n\n  useEffect(() => {\n    if (data) {\n      setResults(data.results);\n      setPageSize(data.results.length);\n\n      if (pages === 0) {\n        setPages(Math.ceil(data.count / 10));\n      }\n    }\n  }, [pages, data]);\n\n  const handlePageChange = (p: number) => {\n    setPage(p);\n  };\n\n  const getColumns = (): TableColumn[] => [\n    {\n      headerText: \"Name\",\n      accessor: \"name\",\n      cellType: \"alpha-numeric\",\n      minWidth: 150,\n    },\n    {\n      headerText: \"Model\",\n      accessor: \"model\",\n      cellType: \"alpha-numeric\",\n      minWidth: 150,\n    },\n    {\n      headerText: \"Manufacturer\",\n      accessor: \"manufacturer\",\n      cellType: \"alpha-numeric\",\n      minWidth: 150,\n    },\n    {\n      headerText: \"Cargo Capacity\",\n      accessor: \"cargo_capacity\",\n      cellType: \"numeric\",\n      minWidth: 100,\n    },\n    {\n      headerText: \"Crew\",\n      accessor: \"crew\",\n      cellType: \"numeric\",\n      minWidth: 100,\n    },\n  ];\n\n  return (\n    <HvTable\n      id=\"test\"\n      data={results}\n      columns={getColumns()}\n      showPageSize={false}\n      sortable={false}\n      page={page}\n      pages={pages}\n      pageSize={pageSize}\n      paginationServerSide\n      onPageChange={handlePageChange}\n    />\n  );\n};\n\nexport default StarshipsTable;\n","import React from \"react\";\nimport { HvGrid } from \"@hitachivantara/uikit-react-core\";\n\nimport StarshipsTable from \"components/starships/StarshipsTable\";\nimport { Container } from \"components/layout\";\n\nconst Starships: React.FC = () => {\n  return (\n    <Container>\n      <HvGrid container>\n        <HvGrid item xs={12}>\n          <StarshipsTable />\n        </HvGrid>\n      </HvGrid>\n    </Container>\n  );\n};\n\nexport default Starships;\n"],"names":["BASE_URL","fetcher","url","axios","then","res","data","useState","page","setPage","pages","setPages","pageSize","setPageSize","results","setResults","path","useSWR","suspense","useStarships","useEffect","length","Math","ceil","count","id","columns","headerText","accessor","cellType","minWidth","showPageSize","sortable","paginationServerSide","onPageChange","p","container","item","xs"],"sourceRoot":""}